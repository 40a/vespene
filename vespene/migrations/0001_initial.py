# Generated by Django 2.0.8 on 2018-10-26 20:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import vespene.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Build',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_internal', models.BooleanField(default=False)),
                ('revision', models.CharField(blank=True, max_length=20, null=True)),
                ('revision_username', models.CharField(blank=True, max_length=512, null=True)),
                ('queued_time', models.DateTimeField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('return_code', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('RUNNING', 'Running'), ('FAILURE', 'Failure'), ('SUCCESS', 'Success'), ('ABORTED', 'Aborted'), ('ABORTING', 'Aborting'), ('ORPHANED', 'Orphaned'), ('QUEUED', 'Queued')], default='UNKNOWN', max_length=20)),
                ('output', models.TextField(blank=True, null=True)),
                ('messages', models.TextField(blank=True, null=True)),
                ('working_dir', models.CharField(blank=True, max_length=1024)),
                ('variables', models.TextField(default='{}')),
                ('launch_answers', models.TextField(default='{}', null=True)),
                ('output_variables', models.TextField(default='{}', help_text='JSON. See project docs for spec.')),
                ('script', models.TextField(blank=True, null=True)),
                ('pipeline_origin_build_id', models.IntegerField(blank=True, null=True)),
                ('pipeline_parent_build_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'builds',
            },
            bases=(models.Model, vespene.models.BaseModel),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('description', models.TextField()),
                ('organization_type', models.CharField(max_length=100)),
                ('organization_identifier', models.CharField(help_text="example: 'vespene-io' for github.com/vespene-io/", max_length=512)),
                ('api_endpoint', models.CharField(blank=True, default='', help_text='blank, or https://{hostname}/api/v3 for GitHub Enterprise', max_length=512)),
                ('import_enabled', models.BooleanField(default=True)),
                ('import_without_dotfile', models.BooleanField(default=False)),
                ('overwrite_project_name', models.BooleanField(default=True)),
                ('overwrite_project_script', models.BooleanField(default=True)),
                ('overwrite_configurations', models.BooleanField(default=True)),
                ('allow_worker_pool_assignment', models.BooleanField(default=True)),
                ('force_rescan', models.BooleanField(default=False, help_text='rescan once at the next opportunity, ignoring refresh_minutes')),
                ('refresh_minutes', models.IntegerField(default=120)),
            ],
            options={
                'db_table': 'organizations',
            },
            bases=(models.Model, vespene.models.BaseModel),
        ),
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('description', models.TextField(blank=True)),
                ('enabled', models.BooleanField(default=True)),
                ('group_name', models.CharField(max_length=512)),
                ('last_completed_date', models.DateTimeField(blank=True, null=True)),
                ('variables', models.TextField(blank=True, default='{}')),
            ],
            options={
                'db_table': 'pipelines',
            },
            bases=(models.Model, vespene.models.BaseModel),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('pipeline_enabled', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('repo_url', models.CharField(blank=True, help_text='ex: git@github.com:your_username/your_repo.git', max_length=1024)),
                ('repo_branch', models.CharField(blank=True, default='', help_text='default: master', max_length=255)),
                ('scm_type', models.CharField(max_length=30)),
                ('webhook_enabled', models.BooleanField(default=False)),
                ('webhook_token', models.CharField(blank=True, default='', help_text='an optional project-specific query string to require', max_length=128, null=True)),
                ('script', models.TextField(default='#!/bin/bash\necho "replace this section"\n', help_text='Interpreter line is required. Exit 0 for success. {{jinja2}} is allowed.', null=True)),
                ('timeout', models.IntegerField(default=60, help_text='Fail the build automatically after this many minutes')),
                ('container_base_image', models.CharField(blank=True, help_text='only for container isolated builds', max_length=512, null=True)),
                ('variables', models.TextField(default='{}', help_text='JSON {}', null=True)),
                ('launch_questions', models.TextField(default='[]', help_text='JSON. See project docs for spec.')),
                ('schedule_enabled', models.BooleanField(default=False)),
                ('monday', models.BooleanField(default=False)),
                ('tuesday', models.BooleanField(default=False)),
                ('wednesday', models.BooleanField(default=False)),
                ('thursday', models.BooleanField(default=False)),
                ('friday', models.BooleanField(default=False)),
                ('saturday', models.BooleanField(default=False)),
                ('sunday', models.BooleanField(default=False)),
                ('weekday_start_hours', models.CharField(blank=True, default='', help_text="24 hour UTC specifier, Ex: '0,8,16' OR '3' OR '0-24'", max_length=512, null=True)),
                ('weekday_start_minutes', models.CharField(blank=True, default='', help_text='Ex: 0, 30', max_length=512, null=True)),
                ('weekend_start_hours', models.CharField(blank=True, default='', help_text="24 hour UTC specifier, Ex: '0,8,16' OR '3' OR '0-24'", max_length=512, null=True)),
                ('weekend_start_minutes', models.CharField(blank=True, default='', help_text='Ex: 0, 30', max_length=512, null=True)),
                ('schedule_threshold', models.IntegerField(blank=True, default=10, help_text='do not queue a build if one was already queued up this many minutes ago')),
            ],
            options={
                'db_table': 'projects',
            },
            bases=(models.Model, vespene.models.BaseModel),
        ),
        migrations.CreateModel(
            name='ServiceLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('description', models.TextField(blank=True)),
                ('username', models.CharField(max_length=512)),
                ('password', models.CharField(blank=True, max_length=512)),
            ],
            options={
                'db_table': 'service_logins',
            },
            bases=(models.Model, vespene.models.BaseModel),
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Snippet names must be a valid python identifiers (ex: just_like_this1)', max_length=512, unique=True)),
                ('description', models.TextField(blank=True)),
                ('text', models.TextField(help_text='this value will be used wherever the {{snippet_name}} appears in a build script')),
            ],
            options={
                'db_table': 'snippets',
            },
            bases=(models.Model, vespene.models.BaseModel),
        ),
        migrations.CreateModel(
            name='SshKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('description', models.TextField(blank=True)),
                ('private_key', models.TextField(blank=True)),
                ('unlock_password', models.CharField(blank=True, help_text='provide passphrase only for locked keys', max_length=512)),
            ],
            options={
                'db_table': 'ssh_keys',
            },
            bases=(models.Model, vespene.models.BaseModel),
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('description', models.TextField(blank=True)),
                ('variables', models.TextField(blank=True, default='{}', help_text='JSON')),
            ],
            options={
                'db_table': 'stage',
            },
            bases=(models.Model, vespene.models.BaseModel),
        ),
        migrations.CreateModel(
            name='VariableSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('description', models.TextField(blank=True)),
                ('variables', models.TextField(blank=True, default='{}', help_text='JSON')),
            ],
            options={
                'db_table': 'variable_sets',
            },
            bases=(models.Model, vespene.models.BaseModel),
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worker_uid', models.CharField(max_length=512, unique=True)),
                ('hostname', models.CharField(max_length=1024, null=True)),
                ('port', models.IntegerField(default=8080)),
                ('build_root', models.CharField(max_length=1024, null=True)),
                ('first_checkin', models.DateTimeField(blank=True, null=True)),
                ('last_checkin', models.DateTimeField(blank=True, null=True)),
                ('fileserving_enabled', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'workers',
            },
            bases=(models.Model, vespene.models.BaseModel),
        ),
        migrations.CreateModel(
            name='WorkerPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('variables', models.TextField(blank=True, default='{}', null=True)),
                ('isolation_method', models.CharField(max_length=50)),
                ('sudo_user', models.CharField(blank=True, max_length=100, null=True)),
                ('sudo_password', models.CharField(blank=True, max_length=100, null=True)),
                ('permissions_hex', models.CharField(default='0x777', help_text='permissions for build directory', max_length=5)),
                ('sleep_seconds', models.IntegerField(default=10, help_text='how often workers should scan for builds')),
                ('auto_abort_minutes', models.IntegerField(default=1440, help_text='auto-abort queued builds after this amount of time in queue')),
                ('build_latest', models.BooleanField(default=True, help_text='auto-abort duplicate older builds?')),
                ('build_object_shelf_life', models.IntegerField(default=365, help_text='retain build objects for this many days')),
                ('build_root_shelf_life', models.IntegerField(default=31, help_text='retain build roots for this many days')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('variable_sets', models.ManyToManyField(blank=True, related_name='worker_pools', to='vespene.VariableSet')),
            ],
            options={
                'db_table': 'worker_pools',
            },
            bases=(models.Model, vespene.models.BaseModel),
        ),
        migrations.AddIndex(
            model_name='worker',
            index=models.Index(fields=['worker_uid'], name='worker_uid_idx'),
        ),
        migrations.AddField(
            model_name='variableset',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='variableset',
            name='owner_groups',
            field=models.ManyToManyField(blank=True, related_name='variable_sets', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='stage',
            name='variable_sets',
            field=models.ManyToManyField(blank=True, related_name='stages', to='vespene.VariableSet'),
        ),
        migrations.AddField(
            model_name='sshkey',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sshkey',
            name='owner_groups',
            field=models.ManyToManyField(blank=True, related_name='ssh_keys', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='snippet',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='snippet',
            name='owner_groups',
            field=models.ManyToManyField(blank=True, related_name='snippets', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='servicelogin',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servicelogin',
            name='owner_groups',
            field=models.ManyToManyField(blank=True, related_name='service_logins', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='project',
            name='active_build',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_build_for_project', to='vespene.Build'),
        ),
        migrations.AddField(
            model_name='project',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='last_build',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_build_for_project', to='vespene.Build'),
        ),
        migrations.AddField(
            model_name='project',
            name='last_successful_build',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_successful_build_for_project', to='vespene.Build'),
        ),
        migrations.AddField(
            model_name='project',
            name='launch_groups',
            field=models.ManyToManyField(blank=True, help_text='these groups can launch builds of this project', related_name='can_launch_projects', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='project',
            name='owner_groups',
            field=models.ManyToManyField(blank=True, related_name='projects', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='project',
            name='pipeline',
            field=models.ForeignKey(blank=True, max_length=512, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='vespene.Pipeline'),
        ),
        migrations.AddField(
            model_name='project',
            name='scm_login',
            field=models.ForeignKey(blank=True, help_text='... or add an SSH key in the next tab', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='vespene.ServiceLogin'),
        ),
        migrations.AddField(
            model_name='project',
            name='ssh_keys',
            field=models.ManyToManyField(blank=True, help_text='ssh-add these keys before the checkout starts', related_name='projects', to='vespene.SshKey'),
        ),
        migrations.AddField(
            model_name='project',
            name='stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='vespene.Stage'),
        ),
        migrations.AddField(
            model_name='project',
            name='variable_sets',
            field=models.ManyToManyField(blank=True, related_name='projects', to='vespene.VariableSet'),
        ),
        migrations.AddField(
            model_name='project',
            name='worker_pool',
            field=models.ForeignKey(help_text='where should this build be run?', on_delete=django.db.models.deletion.PROTECT, related_name='projects', to='vespene.WorkerPool'),
        ),
        migrations.AddField(
            model_name='pipeline',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pipeline',
            name='last_completed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completes_pipeline', to='vespene.Build'),
        ),
        migrations.AddField(
            model_name='pipeline',
            name='owner_groups',
            field=models.ManyToManyField(blank=True, related_name='pipelines', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='pipeline',
            name='stage1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='vespene.Stage'),
        ),
        migrations.AddField(
            model_name='pipeline',
            name='stage2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='vespene.Stage'),
        ),
        migrations.AddField(
            model_name='pipeline',
            name='stage3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='vespene.Stage'),
        ),
        migrations.AddField(
            model_name='pipeline',
            name='stage4',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='vespene.Stage'),
        ),
        migrations.AddField(
            model_name='pipeline',
            name='stage5',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='vespene.Stage'),
        ),
        migrations.AddField(
            model_name='pipeline',
            name='stage6',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='vespene.Stage'),
        ),
        migrations.AddField(
            model_name='pipeline',
            name='stage7',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='vespene.Stage'),
        ),
        migrations.AddField(
            model_name='pipeline',
            name='variable_sets',
            field=models.ManyToManyField(blank=True, related_name='pipelines', to='vespene.VariableSet'),
        ),
        migrations.AddField(
            model_name='organization',
            name='active_build',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_build_for_organization', to='vespene.Build'),
        ),
        migrations.AddField(
            model_name='organization',
            name='auto_attach_ssh_keys',
            field=models.ManyToManyField(blank=True, help_text='SSH keys to be assigned to imported projects', related_name='_organization_auto_attach_ssh_keys_+', to='vespene.SshKey'),
        ),
        migrations.AddField(
            model_name='organization',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organization',
            name='default_worker_pool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='vespene.WorkerPool'),
        ),
        migrations.AddField(
            model_name='organization',
            name='last_build',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_build_for_organization', to='vespene.Build'),
        ),
        migrations.AddField(
            model_name='organization',
            name='last_successful_build',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_successful_build_for_organization', to='vespene.Build'),
        ),
        migrations.AddField(
            model_name='organization',
            name='scm_login',
            field=models.ForeignKey(blank=True, help_text='... or add an SSH key in the next tab', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organizations', to='vespene.ServiceLogin'),
        ),
        migrations.AddField(
            model_name='organization',
            name='worker_pool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='organizations', to='vespene.WorkerPool'),
        ),
        migrations.AddField(
            model_name='build',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='build',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='vespene.Organization'),
        ),
        migrations.AddField(
            model_name='build',
            name='pipeline',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='builds', to='vespene.Project'),
        ),
        migrations.AddField(
            model_name='build',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='vespene.Project'),
        ),
        migrations.AddField(
            model_name='build',
            name='worker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vespene.Worker'),
        ),
        migrations.AddField(
            model_name='build',
            name='worker_pool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='builds', to='vespene.WorkerPool'),
        ),
        migrations.AddIndex(
            model_name='workerpool',
            index=models.Index(fields=['name'], name='worker_pool_name_idx'),
        ),
        migrations.AddIndex(
            model_name='stage',
            index=models.Index(fields=['name'], name='stage_name_idx'),
        ),
        migrations.AddIndex(
            model_name='sshkey',
            index=models.Index(fields=['name'], name='ssh_key_name_idx'),
        ),
        migrations.AddIndex(
            model_name='servicelogin',
            index=models.Index(fields=['name'], name='service_login_name_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['name'], name='project_name_idx'),
        ),
        migrations.AddIndex(
            model_name='pipeline',
            index=models.Index(fields=['name'], name='pipeline_name_idx'),
        ),
        migrations.AddIndex(
            model_name='pipeline',
            index=models.Index(fields=['group_name'], name='pipeline_group_name_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['name'], name='organization_name_idx'),
        ),
        migrations.AddIndex(
            model_name='build',
            index=models.Index(fields=['project'], name='execution_project_idx'),
        ),
    ]
